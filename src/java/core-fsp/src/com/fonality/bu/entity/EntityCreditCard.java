package com.fonality.bu.entity;

// Generated Mar 21, 2013 12:26:07 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * EntityCreditCard generated by hbm2java
 */
@Entity
@Table(name = "entity_credit_card", catalog = "fcs", uniqueConstraints = @UniqueConstraint(columnNames = {
		"customer_id", "netsuite_card_id" }))
public class EntityCreditCard implements java.io.Serializable {

	private Integer entityCreditCardId;
	private EntityAddress entityAddress;
	private int customerId;
	private int netsuiteCardId;
	private String cardholderName;
	private String firstFour;
	private String lastFour;
	private Byte expirationMonth;
	private Short expirationYear;
	private Date created;
	private Date updated;
	private Set<BillingSchedule> billingSchedules = new HashSet<BillingSchedule>(
			0);
	private Set<Orders> orderses = new HashSet<Orders>(0);
	private Set<OrderTransaction> orderTransactions = new HashSet<OrderTransaction>(
			0);

	public EntityCreditCard() {
	}

	public EntityCreditCard(EntityAddress entityAddress, int customerId,
			int netsuiteCardId, Date created, Date updated) {
		this.entityAddress = entityAddress;
		this.customerId = customerId;
		this.netsuiteCardId = netsuiteCardId;
		this.created = created;
		this.updated = updated;
	}

	public EntityCreditCard(EntityAddress entityAddress, int customerId,
			int netsuiteCardId, String cardholderName, String firstFour,
			String lastFour, Byte expirationMonth, Short expirationYear,
			Date created, Date updated, Set<BillingSchedule> billingSchedules,
			Set<Orders> orderses, Set<OrderTransaction> orderTransactions) {
		this.entityAddress = entityAddress;
		this.customerId = customerId;
		this.netsuiteCardId = netsuiteCardId;
		this.cardholderName = cardholderName;
		this.firstFour = firstFour;
		this.lastFour = lastFour;
		this.expirationMonth = expirationMonth;
		this.expirationYear = expirationYear;
		this.created = created;
		this.updated = updated;
		this.billingSchedules = billingSchedules;
		this.orderses = orderses;
		this.orderTransactions = orderTransactions;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "entity_credit_card_id", unique = true, nullable = false)
	public Integer getEntityCreditCardId() {
		return this.entityCreditCardId;
	}

	public void setEntityCreditCardId(Integer entityCreditCardId) {
		this.entityCreditCardId = entityCreditCardId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "billing_address_id", nullable = false)
	public EntityAddress getEntityAddress() {
		return this.entityAddress;
	}

	public void setEntityAddress(EntityAddress entityAddress) {
		this.entityAddress = entityAddress;
	}

	@Column(name = "customer_id", nullable = false)
	public int getCustomerId() {
		return this.customerId;
	}

	public void setCustomerId(int customerId) {
		this.customerId = customerId;
	}

	@Column(name = "netsuite_card_id", nullable = false)
	public int getNetsuiteCardId() {
		return this.netsuiteCardId;
	}

	public void setNetsuiteCardId(int netsuiteCardId) {
		this.netsuiteCardId = netsuiteCardId;
	}

	@Column(name = "cardholder_name")
	public String getCardholderName() {
		return this.cardholderName;
	}

	public void setCardholderName(String cardholderName) {
		this.cardholderName = cardholderName;
	}

	@Column(name = "first_four", length = 4)
	public String getFirstFour() {
		return this.firstFour;
	}

	public void setFirstFour(String firstFour) {
		this.firstFour = firstFour;
	}

	@Column(name = "last_four", length = 4)
	public String getLastFour() {
		return this.lastFour;
	}

	public void setLastFour(String lastFour) {
		this.lastFour = lastFour;
	}

	@Column(name = "expiration_month")
	public Byte getExpirationMonth() {
		return this.expirationMonth;
	}

	public void setExpirationMonth(Byte expirationMonth) {
		this.expirationMonth = expirationMonth;
	}

	@Column(name = "expiration_year")
	public Short getExpirationYear() {
		return this.expirationYear;
	}

	public void setExpirationYear(Short expirationYear) {
		this.expirationYear = expirationYear;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 0)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated", nullable = false, length = 0)
	public Date getUpdated() {
		return this.updated;
	}

	public void setUpdated(Date updated) {
		this.updated = updated;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "entityCreditCard")
	public Set<BillingSchedule> getBillingSchedules() {
		return this.billingSchedules;
	}

	public void setBillingSchedules(Set<BillingSchedule> billingSchedules) {
		this.billingSchedules = billingSchedules;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "entityCreditCard")
	public Set<Orders> getOrderses() {
		return this.orderses;
	}

	public void setOrderses(Set<Orders> orderses) {
		this.orderses = orderses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "entityCreditCard")
	public Set<OrderTransaction> getOrderTransactions() {
		return this.orderTransactions;
	}

	public void setOrderTransactions(Set<OrderTransaction> orderTransactions) {
		this.orderTransactions = orderTransactions;
	}

}
