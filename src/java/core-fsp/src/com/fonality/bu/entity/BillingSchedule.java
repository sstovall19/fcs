package com.fonality.bu.entity;

// Generated Mar 21, 2013 12:26:07 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * BillingSchedule generated by hbm2java
 */
@Entity
@Table(name = "billing_schedule", catalog = "fcs")
public class BillingSchedule implements java.io.Serializable {

	private Integer billingScheduleId;
	private PaymentMethod paymentMethod;
	private EntityCreditCard entityCreditCard;
	private Orders orders;
	private int customerId;
	private String type;
	private Date startDate;
	private Date endDate;
	private String status;
	private Date created;
	private Date updated;
	private Set<OrderTransaction> orderTransactions = new HashSet<OrderTransaction>(
			0);
	private Set<OrderTransactionLog> orderTransactionLogs = new HashSet<OrderTransactionLog>(
			0);

	public BillingSchedule() {
	}

	public BillingSchedule(PaymentMethod paymentMethod, Orders orders,
			int customerId, String type, Date startDate, Date endDate,
			String status, Date created, Date updated) {
		this.paymentMethod = paymentMethod;
		this.orders = orders;
		this.customerId = customerId;
		this.type = type;
		this.startDate = startDate;
		this.endDate = endDate;
		this.status = status;
		this.created = created;
		this.updated = updated;
	}

	public BillingSchedule(PaymentMethod paymentMethod,
			EntityCreditCard entityCreditCard, Orders orders, int customerId,
			String type, Date startDate, Date endDate, String status,
			Date created, Date updated,
			Set<OrderTransaction> orderTransactions,
			Set<OrderTransactionLog> orderTransactionLogs) {
		this.paymentMethod = paymentMethod;
		this.entityCreditCard = entityCreditCard;
		this.orders = orders;
		this.customerId = customerId;
		this.type = type;
		this.startDate = startDate;
		this.endDate = endDate;
		this.status = status;
		this.created = created;
		this.updated = updated;
		this.orderTransactions = orderTransactions;
		this.orderTransactionLogs = orderTransactionLogs;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "billing_schedule_id", unique = true, nullable = false)
	public Integer getBillingScheduleId() {
		return this.billingScheduleId;
	}

	public void setBillingScheduleId(Integer billingScheduleId) {
		this.billingScheduleId = billingScheduleId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "payment_method_id", nullable = false)
	public PaymentMethod getPaymentMethod() {
		return this.paymentMethod;
	}

	public void setPaymentMethod(PaymentMethod paymentMethod) {
		this.paymentMethod = paymentMethod;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "credit_card_id")
	public EntityCreditCard getEntityCreditCard() {
		return this.entityCreditCard;
	}

	public void setEntityCreditCard(EntityCreditCard entityCreditCard) {
		this.entityCreditCard = entityCreditCard;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "order_id", nullable = false)
	public Orders getOrders() {
		return this.orders;
	}

	public void setOrders(Orders orders) {
		this.orders = orders;
	}

	@Column(name = "customer_id", nullable = false)
	public int getCustomerId() {
		return this.customerId;
	}

	public void setCustomerId(int customerId) {
		this.customerId = customerId;
	}

	@Column(name = "type", nullable = false, length = 8)
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "start_date", nullable = false, length = 0)
	public Date getStartDate() {
		return this.startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "end_date", nullable = false, length = 0)
	public Date getEndDate() {
		return this.endDate;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	@Column(name = "status", nullable = false, length = 21)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 0)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated", nullable = false, length = 0)
	public Date getUpdated() {
		return this.updated;
	}

	public void setUpdated(Date updated) {
		this.updated = updated;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "billingSchedule")
	public Set<OrderTransaction> getOrderTransactions() {
		return this.orderTransactions;
	}

	public void setOrderTransactions(Set<OrderTransaction> orderTransactions) {
		this.orderTransactions = orderTransactions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "billingSchedule")
	public Set<OrderTransactionLog> getOrderTransactionLogs() {
		return this.orderTransactionLogs;
	}

	public void setOrderTransactionLogs(
			Set<OrderTransactionLog> orderTransactionLogs) {
		this.orderTransactionLogs = orderTransactionLogs;
	}

}
