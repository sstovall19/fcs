package com.fonality.bu.entity;

// Generated Mar 21, 2013 12:26:07 PM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Orders generated by hbm2java
 */
@Entity
@Table(name = "orders", catalog = "fcs")
public class Orders implements java.io.Serializable {

	private Integer orderId;
	private PaymentMethod paymentMethod;
	private OrderStatus orderStatusByManagerApprovalStatusId;
	private OrderStatus orderStatusByOrderStatusId;
	private OrderStatus orderStatusByBillingApprovalStatusId;
	private EntityCreditCard entityCreditCard;
	private EntityContact entityContact;
	private OrderStatus orderStatusByProvisioningStatusId;
	private TransactionSubmit transactionSubmit;
	private OrderStatus orderStatusByCreditApprovalStatusId;
	private BigDecimal prepayAmount;
	private BigDecimal oneTimeTotal;
	private BigDecimal mrcTotal;
	private BigDecimal contractTotal;
	private BigDecimal contractBalance;
	private String avgCostPerUser;
	private String costAddUser;
	private int termInMonths;
	private Date contractStartDate;
	private int billingIntervalInMonths;
	private Integer resellerId;
	private Integer customerId;
	private String companyName;
	private String website;
	private String industry;
	private long netsuiteEntityId;
	private Integer netsuiteSalespersonId;
	private Integer orderCreatorId;
	private String note;
	private String proposalPdf;
	private Integer managerReviewerId;
	private Date managerApprovalDate;
	private Integer billingReviewerId;
	private Date billingApprovalDate;
	private Integer creditReviewerId;
	private Date creditApprovalDate;
	private String approvalComment;
	private String orderType;
	private String recordType;
	private Date quoteExpiry;
	private Date created;
	private Date updated;
	private Set<BillingSchedule> billingSchedules = new HashSet<BillingSchedule>(
			0);
	private Set<OrderGroup> orderGroups = new HashSet<OrderGroup>(0);
	private Set<OrderDiscount> orderDiscounts = new HashSet<OrderDiscount>(0);

	public Orders() {
	}

	public Orders(EntityContact entityContact, BigDecimal prepayAmount,
			BigDecimal oneTimeTotal, BigDecimal mrcTotal,
			BigDecimal contractTotal, BigDecimal contractBalance,
			String avgCostPerUser, String costAddUser, int termInMonths,
			Date contractStartDate, int billingIntervalInMonths,
			String companyName, String website, String industry,
			long netsuiteEntityId, String note, Date managerApprovalDate,
			Date billingApprovalDate, Date creditApprovalDate,
			String approvalComment, String orderType, String recordType,
			Date quoteExpiry, Date created, Date updated) {
		this.entityContact = entityContact;
		this.prepayAmount = prepayAmount;
		this.oneTimeTotal = oneTimeTotal;
		this.mrcTotal = mrcTotal;
		this.contractTotal = contractTotal;
		this.contractBalance = contractBalance;
		this.avgCostPerUser = avgCostPerUser;
		this.costAddUser = costAddUser;
		this.termInMonths = termInMonths;
		this.contractStartDate = contractStartDate;
		this.billingIntervalInMonths = billingIntervalInMonths;
		this.companyName = companyName;
		this.website = website;
		this.industry = industry;
		this.netsuiteEntityId = netsuiteEntityId;
		this.note = note;
		this.managerApprovalDate = managerApprovalDate;
		this.billingApprovalDate = billingApprovalDate;
		this.creditApprovalDate = creditApprovalDate;
		this.approvalComment = approvalComment;
		this.orderType = orderType;
		this.recordType = recordType;
		this.quoteExpiry = quoteExpiry;
		this.created = created;
		this.updated = updated;
	}

	public Orders(PaymentMethod paymentMethod,
			OrderStatus orderStatusByManagerApprovalStatusId,
			OrderStatus orderStatusByOrderStatusId,
			OrderStatus orderStatusByBillingApprovalStatusId,
			EntityCreditCard entityCreditCard, EntityContact entityContact,
			OrderStatus orderStatusByProvisioningStatusId,
			TransactionSubmit transactionSubmit,
			OrderStatus orderStatusByCreditApprovalStatusId,
			BigDecimal prepayAmount, BigDecimal oneTimeTotal,
			BigDecimal mrcTotal, BigDecimal contractTotal,
			BigDecimal contractBalance, String avgCostPerUser,
			String costAddUser, int termInMonths, Date contractStartDate,
			int billingIntervalInMonths, Integer resellerId,
			Integer customerId, String companyName, String website,
			String industry, long netsuiteEntityId,
			Integer netsuiteSalespersonId, Integer orderCreatorId, String note,
			String proposalPdf, Integer managerReviewerId,
			Date managerApprovalDate, Integer billingReviewerId,
			Date billingApprovalDate, Integer creditReviewerId,
			Date creditApprovalDate, String approvalComment, String orderType,
			String recordType, Date quoteExpiry, Date created, Date updated,
			Set<BillingSchedule> billingSchedules, Set<OrderGroup> orderGroups,
			Set<OrderDiscount> orderDiscounts) {
		this.paymentMethod = paymentMethod;
		this.orderStatusByManagerApprovalStatusId = orderStatusByManagerApprovalStatusId;
		this.orderStatusByOrderStatusId = orderStatusByOrderStatusId;
		this.orderStatusByBillingApprovalStatusId = orderStatusByBillingApprovalStatusId;
		this.entityCreditCard = entityCreditCard;
		this.entityContact = entityContact;
		this.orderStatusByProvisioningStatusId = orderStatusByProvisioningStatusId;
		this.transactionSubmit = transactionSubmit;
		this.orderStatusByCreditApprovalStatusId = orderStatusByCreditApprovalStatusId;
		this.prepayAmount = prepayAmount;
		this.oneTimeTotal = oneTimeTotal;
		this.mrcTotal = mrcTotal;
		this.contractTotal = contractTotal;
		this.contractBalance = contractBalance;
		this.avgCostPerUser = avgCostPerUser;
		this.costAddUser = costAddUser;
		this.termInMonths = termInMonths;
		this.contractStartDate = contractStartDate;
		this.billingIntervalInMonths = billingIntervalInMonths;
		this.resellerId = resellerId;
		this.customerId = customerId;
		this.companyName = companyName;
		this.website = website;
		this.industry = industry;
		this.netsuiteEntityId = netsuiteEntityId;
		this.netsuiteSalespersonId = netsuiteSalespersonId;
		this.orderCreatorId = orderCreatorId;
		this.note = note;
		this.proposalPdf = proposalPdf;
		this.managerReviewerId = managerReviewerId;
		this.managerApprovalDate = managerApprovalDate;
		this.billingReviewerId = billingReviewerId;
		this.billingApprovalDate = billingApprovalDate;
		this.creditReviewerId = creditReviewerId;
		this.creditApprovalDate = creditApprovalDate;
		this.approvalComment = approvalComment;
		this.orderType = orderType;
		this.recordType = recordType;
		this.quoteExpiry = quoteExpiry;
		this.created = created;
		this.updated = updated;
		this.billingSchedules = billingSchedules;
		this.orderGroups = orderGroups;
		this.orderDiscounts = orderDiscounts;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "order_id", unique = true, nullable = false)
	public Integer getOrderId() {
		return this.orderId;
	}

	public void setOrderId(Integer orderId) {
		this.orderId = orderId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "payment_method_id")
	public PaymentMethod getPaymentMethod() {
		return this.paymentMethod;
	}

	public void setPaymentMethod(PaymentMethod paymentMethod) {
		this.paymentMethod = paymentMethod;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "manager_approval_status_id")
	public OrderStatus getOrderStatusByManagerApprovalStatusId() {
		return this.orderStatusByManagerApprovalStatusId;
	}

	public void setOrderStatusByManagerApprovalStatusId(
			OrderStatus orderStatusByManagerApprovalStatusId) {
		this.orderStatusByManagerApprovalStatusId = orderStatusByManagerApprovalStatusId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "order_status_id")
	public OrderStatus getOrderStatusByOrderStatusId() {
		return this.orderStatusByOrderStatusId;
	}

	public void setOrderStatusByOrderStatusId(
			OrderStatus orderStatusByOrderStatusId) {
		this.orderStatusByOrderStatusId = orderStatusByOrderStatusId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "billing_approval_status_id")
	public OrderStatus getOrderStatusByBillingApprovalStatusId() {
		return this.orderStatusByBillingApprovalStatusId;
	}

	public void setOrderStatusByBillingApprovalStatusId(
			OrderStatus orderStatusByBillingApprovalStatusId) {
		this.orderStatusByBillingApprovalStatusId = orderStatusByBillingApprovalStatusId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "credit_card_id")
	public EntityCreditCard getEntityCreditCard() {
		return this.entityCreditCard;
	}

	public void setEntityCreditCard(EntityCreditCard entityCreditCard) {
		this.entityCreditCard = entityCreditCard;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "contact_id", nullable = false)
	public EntityContact getEntityContact() {
		return this.entityContact;
	}

	public void setEntityContact(EntityContact entityContact) {
		this.entityContact = entityContact;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "provisioning_status_id")
	public OrderStatus getOrderStatusByProvisioningStatusId() {
		return this.orderStatusByProvisioningStatusId;
	}

	public void setOrderStatusByProvisioningStatusId(
			OrderStatus orderStatusByProvisioningStatusId) {
		this.orderStatusByProvisioningStatusId = orderStatusByProvisioningStatusId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "transaction_submit_id")
	public TransactionSubmit getTransactionSubmit() {
		return this.transactionSubmit;
	}

	public void setTransactionSubmit(TransactionSubmit transactionSubmit) {
		this.transactionSubmit = transactionSubmit;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "credit_approval_status_id")
	public OrderStatus getOrderStatusByCreditApprovalStatusId() {
		return this.orderStatusByCreditApprovalStatusId;
	}

	public void setOrderStatusByCreditApprovalStatusId(
			OrderStatus orderStatusByCreditApprovalStatusId) {
		this.orderStatusByCreditApprovalStatusId = orderStatusByCreditApprovalStatusId;
	}

	@Column(name = "prepay_amount", nullable = false, precision = 10)
	public BigDecimal getPrepayAmount() {
		return this.prepayAmount;
	}

	public void setPrepayAmount(BigDecimal prepayAmount) {
		this.prepayAmount = prepayAmount;
	}

	@Column(name = "one_time_total", nullable = false, precision = 10)
	public BigDecimal getOneTimeTotal() {
		return this.oneTimeTotal;
	}

	public void setOneTimeTotal(BigDecimal oneTimeTotal) {
		this.oneTimeTotal = oneTimeTotal;
	}

	@Column(name = "mrc_total", nullable = false, precision = 10)
	public BigDecimal getMrcTotal() {
		return this.mrcTotal;
	}

	public void setMrcTotal(BigDecimal mrcTotal) {
		this.mrcTotal = mrcTotal;
	}

	@Column(name = "contract_total", nullable = false, precision = 10)
	public BigDecimal getContractTotal() {
		return this.contractTotal;
	}

	public void setContractTotal(BigDecimal contractTotal) {
		this.contractTotal = contractTotal;
	}

	@Column(name = "contract_balance", nullable = false, precision = 10)
	public BigDecimal getContractBalance() {
		return this.contractBalance;
	}

	public void setContractBalance(BigDecimal contractBalance) {
		this.contractBalance = contractBalance;
	}

	@Column(name = "avg_cost_per_user", nullable = false)
	public String getAvgCostPerUser() {
		return this.avgCostPerUser;
	}

	public void setAvgCostPerUser(String avgCostPerUser) {
		this.avgCostPerUser = avgCostPerUser;
	}

	@Column(name = "cost_add_user", nullable = false)
	public String getCostAddUser() {
		return this.costAddUser;
	}

	public void setCostAddUser(String costAddUser) {
		this.costAddUser = costAddUser;
	}

	@Column(name = "term_in_months", nullable = false)
	public int getTermInMonths() {
		return this.termInMonths;
	}

	public void setTermInMonths(int termInMonths) {
		this.termInMonths = termInMonths;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "contract_start_date", nullable = false, length = 0)
	public Date getContractStartDate() {
		return this.contractStartDate;
	}

	public void setContractStartDate(Date contractStartDate) {
		this.contractStartDate = contractStartDate;
	}

	@Column(name = "billing_interval_in_months", nullable = false)
	public int getBillingIntervalInMonths() {
		return this.billingIntervalInMonths;
	}

	public void setBillingIntervalInMonths(int billingIntervalInMonths) {
		this.billingIntervalInMonths = billingIntervalInMonths;
	}

	@Column(name = "reseller_id")
	public Integer getResellerId() {
		return this.resellerId;
	}

	public void setResellerId(Integer resellerId) {
		this.resellerId = resellerId;
	}

	@Column(name = "customer_id")
	public Integer getCustomerId() {
		return this.customerId;
	}

	public void setCustomerId(Integer customerId) {
		this.customerId = customerId;
	}

	@Column(name = "company_name", nullable = false, length = 80)
	public String getCompanyName() {
		return this.companyName;
	}

	public void setCompanyName(String companyName) {
		this.companyName = companyName;
	}

	@Column(name = "website", nullable = false)
	public String getWebsite() {
		return this.website;
	}

	public void setWebsite(String website) {
		this.website = website;
	}

	@Column(name = "industry", nullable = false)
	public String getIndustry() {
		return this.industry;
	}

	public void setIndustry(String industry) {
		this.industry = industry;
	}

	@Column(name = "netsuite_entity_id", nullable = false)
	public long getNetsuiteEntityId() {
		return this.netsuiteEntityId;
	}

	public void setNetsuiteEntityId(long netsuiteEntityId) {
		this.netsuiteEntityId = netsuiteEntityId;
	}

	@Column(name = "netsuite_salesperson_id")
	public Integer getNetsuiteSalespersonId() {
		return this.netsuiteSalespersonId;
	}

	public void setNetsuiteSalespersonId(Integer netsuiteSalespersonId) {
		this.netsuiteSalespersonId = netsuiteSalespersonId;
	}

	@Column(name = "order_creator_id")
	public Integer getOrderCreatorId() {
		return this.orderCreatorId;
	}

	public void setOrderCreatorId(Integer orderCreatorId) {
		this.orderCreatorId = orderCreatorId;
	}

	@Column(name = "note", nullable = false, length = 16777215)
	public String getNote() {
		return this.note;
	}

	public void setNote(String note) {
		this.note = note;
	}

	@Column(name = "proposal_pdf")
	public String getProposalPdf() {
		return this.proposalPdf;
	}

	public void setProposalPdf(String proposalPdf) {
		this.proposalPdf = proposalPdf;
	}

	@Column(name = "manager_reviewer_id")
	public Integer getManagerReviewerId() {
		return this.managerReviewerId;
	}

	public void setManagerReviewerId(Integer managerReviewerId) {
		this.managerReviewerId = managerReviewerId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "manager_approval_date", nullable = false, length = 0)
	public Date getManagerApprovalDate() {
		return this.managerApprovalDate;
	}

	public void setManagerApprovalDate(Date managerApprovalDate) {
		this.managerApprovalDate = managerApprovalDate;
	}

	@Column(name = "billing_reviewer_id")
	public Integer getBillingReviewerId() {
		return this.billingReviewerId;
	}

	public void setBillingReviewerId(Integer billingReviewerId) {
		this.billingReviewerId = billingReviewerId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "billing_approval_date", nullable = false, length = 0)
	public Date getBillingApprovalDate() {
		return this.billingApprovalDate;
	}

	public void setBillingApprovalDate(Date billingApprovalDate) {
		this.billingApprovalDate = billingApprovalDate;
	}

	@Column(name = "credit_reviewer_id")
	public Integer getCreditReviewerId() {
		return this.creditReviewerId;
	}

	public void setCreditReviewerId(Integer creditReviewerId) {
		this.creditReviewerId = creditReviewerId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "credit_approval_date", nullable = false, length = 0)
	public Date getCreditApprovalDate() {
		return this.creditApprovalDate;
	}

	public void setCreditApprovalDate(Date creditApprovalDate) {
		this.creditApprovalDate = creditApprovalDate;
	}

	@Column(name = "approval_comment", nullable = false, length = 16777215)
	public String getApprovalComment() {
		return this.approvalComment;
	}

	public void setApprovalComment(String approvalComment) {
		this.approvalComment = approvalComment;
	}

	@Column(name = "order_type", nullable = false, length = 5)
	public String getOrderType() {
		return this.orderType;
	}

	public void setOrderType(String orderType) {
		this.orderType = orderType;
	}

	@Column(name = "record_type", nullable = false, length = 6)
	public String getRecordType() {
		return this.recordType;
	}

	public void setRecordType(String recordType) {
		this.recordType = recordType;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "quote_expiry", nullable = false, length = 0)
	public Date getQuoteExpiry() {
		return this.quoteExpiry;
	}

	public void setQuoteExpiry(Date quoteExpiry) {
		this.quoteExpiry = quoteExpiry;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 0)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated", nullable = false, length = 0)
	public Date getUpdated() {
		return this.updated;
	}

	public void setUpdated(Date updated) {
		this.updated = updated;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "orders")
	public Set<BillingSchedule> getBillingSchedules() {
		return this.billingSchedules;
	}

	public void setBillingSchedules(Set<BillingSchedule> billingSchedules) {
		this.billingSchedules = billingSchedules;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "orders")
	public Set<OrderGroup> getOrderGroups() {
		return this.orderGroups;
	}

	public void setOrderGroups(Set<OrderGroup> orderGroups) {
		this.orderGroups = orderGroups;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "orders")
	public Set<OrderDiscount> getOrderDiscounts() {
		return this.orderDiscounts;
	}

	public void setOrderDiscounts(Set<OrderDiscount> orderDiscounts) {
		this.orderDiscounts = orderDiscounts;
	}

}
