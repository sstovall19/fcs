package com.fonality.bu.entity;

// Generated Mar 21, 2013 12:26:07 PM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * DiscountLimit generated by hbm2java
 */
@Entity
@Table(name = "discount_limit", catalog = "fcs", uniqueConstraints = @UniqueConstraint(columnNames = "category_id"))
public class DiscountLimit implements java.io.Serializable {

	private Integer discountLimitId;
	private DiscountCategory discountCategory;
	private BigDecimal percent;
	private Date created;
	private Date updated;

	public DiscountLimit() {
	}

	public DiscountLimit(DiscountCategory discountCategory, BigDecimal percent,
			Date created, Date updated) {
		this.discountCategory = discountCategory;
		this.percent = percent;
		this.created = created;
		this.updated = updated;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "discount_limit_id", unique = true, nullable = false)
	public Integer getDiscountLimitId() {
		return this.discountLimitId;
	}

	public void setDiscountLimitId(Integer discountLimitId) {
		this.discountLimitId = discountLimitId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "category_id", unique = true, nullable = false)
	public DiscountCategory getDiscountCategory() {
		return this.discountCategory;
	}

	public void setDiscountCategory(DiscountCategory discountCategory) {
		this.discountCategory = discountCategory;
	}

	@Column(name = "percent", nullable = false, precision = 2)
	public BigDecimal getPercent() {
		return this.percent;
	}

	public void setPercent(BigDecimal percent) {
		this.percent = percent;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 0)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated", nullable = false, length = 0)
	public Date getUpdated() {
		return this.updated;
	}

	public void setUpdated(Date updated) {
		this.updated = updated;
	}

}
