package com.fonality.bu.entity;

// Generated Mar 21, 2013 12:26:07 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Groups generated by hbm2java
 */
@Entity
@Table(name = "groups", catalog = "fcs", uniqueConstraints = {
		@UniqueConstraint(columnNames = { "server_id", "extension" }),
		@UniqueConstraint(columnNames = { "server_id", "name" }) })
public class Groups implements java.io.Serializable {

	private Integer groupId;
	private int serverId;
	private String name;
	private Integer extension;
	private boolean autoAddUser;
	private boolean isDepartment;
	private Date created;
	private Date updated;
	private Set<RolePerm> rolePerms = new HashSet<RolePerm>(0);
	private Set<GroupUser> groupUsers = new HashSet<GroupUser>(0);

	public Groups() {
	}

	public Groups(int serverId, String name, boolean autoAddUser,
			boolean isDepartment, Date created, Date updated) {
		this.serverId = serverId;
		this.name = name;
		this.autoAddUser = autoAddUser;
		this.isDepartment = isDepartment;
		this.created = created;
		this.updated = updated;
	}

	public Groups(int serverId, String name, Integer extension,
			boolean autoAddUser, boolean isDepartment, Date created,
			Date updated, Set<RolePerm> rolePerms, Set<GroupUser> groupUsers) {
		this.serverId = serverId;
		this.name = name;
		this.extension = extension;
		this.autoAddUser = autoAddUser;
		this.isDepartment = isDepartment;
		this.created = created;
		this.updated = updated;
		this.rolePerms = rolePerms;
		this.groupUsers = groupUsers;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "group_id", unique = true, nullable = false)
	public Integer getGroupId() {
		return this.groupId;
	}

	public void setGroupId(Integer groupId) {
		this.groupId = groupId;
	}

	@Column(name = "server_id", nullable = false)
	public int getServerId() {
		return this.serverId;
	}

	public void setServerId(int serverId) {
		this.serverId = serverId;
	}

	@Column(name = "name", nullable = false, length = 80)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "extension")
	public Integer getExtension() {
		return this.extension;
	}

	public void setExtension(Integer extension) {
		this.extension = extension;
	}

	@Column(name = "auto_add_user", nullable = false)
	public boolean isAutoAddUser() {
		return this.autoAddUser;
	}

	public void setAutoAddUser(boolean autoAddUser) {
		this.autoAddUser = autoAddUser;
	}

	@Column(name = "is_department", nullable = false)
	public boolean isIsDepartment() {
		return this.isDepartment;
	}

	public void setIsDepartment(boolean isDepartment) {
		this.isDepartment = isDepartment;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 0)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated", nullable = false, length = 0)
	public Date getUpdated() {
		return this.updated;
	}

	public void setUpdated(Date updated) {
		this.updated = updated;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "groups")
	public Set<RolePerm> getRolePerms() {
		return this.rolePerms;
	}

	public void setRolePerms(Set<RolePerm> rolePerms) {
		this.rolePerms = rolePerms;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "groups")
	public Set<GroupUser> getGroupUsers() {
		return this.groupUsers;
	}

	public void setGroupUsers(Set<GroupUser> groupUsers) {
		this.groupUsers = groupUsers;
	}

}
