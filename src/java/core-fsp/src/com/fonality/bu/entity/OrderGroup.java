package com.fonality.bu.entity;

// Generated Mar 21, 2013 12:26:07 PM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * OrderGroup generated by hbm2java
 */
@Entity
@Table(name = "order_group", catalog = "fcs", uniqueConstraints = {
		@UniqueConstraint(columnNames = { "order_id", "netsuite_sales_order_id" }),
		@UniqueConstraint(columnNames = { "order_id", "server_id",
				"shipping_address_id" }) })
public class OrderGroup implements java.io.Serializable {

	private Integer orderGroupId;
	private EntityAddress entityAddressByShippingAddressId;
	private Product product;
	private OrderShipping orderShipping;
	private Orders orders;
	private EntityAddress entityAddressByBillingAddressId;
	private Integer serverId;
	private boolean isPrimary;
	private Long netsuiteSalesOrderId;
	private Long netsuiteEchosignId;
	private BigDecimal oneTimeTotal;
	private BigDecimal mrcTotal;
	private BigDecimal oneTimeTaxTotal;
	private BigDecimal mrcTaxTotal;
	private Set<OrderShipping> orderShippings = new HashSet<OrderShipping>(0);
	private Set<OrderTransactionItem> orderTransactionItems = new HashSet<OrderTransactionItem>(
			0);
	private Set<OrderTransaction> orderTransactions = new HashSet<OrderTransaction>(
			0);
	private Set<OrderBundle> orderBundles = new HashSet<OrderBundle>(0);

	public OrderGroup() {
	}

	public OrderGroup(EntityAddress entityAddressByShippingAddressId,
			Product product, Orders orders, boolean isPrimary,
			BigDecimal oneTimeTotal, BigDecimal mrcTotal,
			BigDecimal oneTimeTaxTotal, BigDecimal mrcTaxTotal) {
		this.entityAddressByShippingAddressId = entityAddressByShippingAddressId;
		this.product = product;
		this.orders = orders;
		this.isPrimary = isPrimary;
		this.oneTimeTotal = oneTimeTotal;
		this.mrcTotal = mrcTotal;
		this.oneTimeTaxTotal = oneTimeTaxTotal;
		this.mrcTaxTotal = mrcTaxTotal;
	}

	public OrderGroup(EntityAddress entityAddressByShippingAddressId,
			Product product, OrderShipping orderShipping, Orders orders,
			EntityAddress entityAddressByBillingAddressId, Integer serverId,
			boolean isPrimary, Long netsuiteSalesOrderId,
			Long netsuiteEchosignId, BigDecimal oneTimeTotal,
			BigDecimal mrcTotal, BigDecimal oneTimeTaxTotal,
			BigDecimal mrcTaxTotal, Set<OrderShipping> orderShippings,
			Set<OrderTransactionItem> orderTransactionItems,
			Set<OrderTransaction> orderTransactions,
			Set<OrderBundle> orderBundles) {
		this.entityAddressByShippingAddressId = entityAddressByShippingAddressId;
		this.product = product;
		this.orderShipping = orderShipping;
		this.orders = orders;
		this.entityAddressByBillingAddressId = entityAddressByBillingAddressId;
		this.serverId = serverId;
		this.isPrimary = isPrimary;
		this.netsuiteSalesOrderId = netsuiteSalesOrderId;
		this.netsuiteEchosignId = netsuiteEchosignId;
		this.oneTimeTotal = oneTimeTotal;
		this.mrcTotal = mrcTotal;
		this.oneTimeTaxTotal = oneTimeTaxTotal;
		this.mrcTaxTotal = mrcTaxTotal;
		this.orderShippings = orderShippings;
		this.orderTransactionItems = orderTransactionItems;
		this.orderTransactions = orderTransactions;
		this.orderBundles = orderBundles;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "order_group_id", unique = true, nullable = false)
	public Integer getOrderGroupId() {
		return this.orderGroupId;
	}

	public void setOrderGroupId(Integer orderGroupId) {
		this.orderGroupId = orderGroupId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "shipping_address_id", nullable = false)
	public EntityAddress getEntityAddressByShippingAddressId() {
		return this.entityAddressByShippingAddressId;
	}

	public void setEntityAddressByShippingAddressId(
			EntityAddress entityAddressByShippingAddressId) {
		this.entityAddressByShippingAddressId = entityAddressByShippingAddressId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "product_id", nullable = false)
	public Product getProduct() {
		return this.product;
	}

	public void setProduct(Product product) {
		this.product = product;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "chosen_shipping_id")
	public OrderShipping getOrderShipping() {
		return this.orderShipping;
	}

	public void setOrderShipping(OrderShipping orderShipping) {
		this.orderShipping = orderShipping;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "order_id", nullable = false)
	public Orders getOrders() {
		return this.orders;
	}

	public void setOrders(Orders orders) {
		this.orders = orders;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "billing_address_id")
	public EntityAddress getEntityAddressByBillingAddressId() {
		return this.entityAddressByBillingAddressId;
	}

	public void setEntityAddressByBillingAddressId(
			EntityAddress entityAddressByBillingAddressId) {
		this.entityAddressByBillingAddressId = entityAddressByBillingAddressId;
	}

	@Column(name = "server_id")
	public Integer getServerId() {
		return this.serverId;
	}

	public void setServerId(Integer serverId) {
		this.serverId = serverId;
	}

	@Column(name = "is_primary", nullable = false)
	public boolean isIsPrimary() {
		return this.isPrimary;
	}

	public void setIsPrimary(boolean isPrimary) {
		this.isPrimary = isPrimary;
	}

	@Column(name = "netsuite_sales_order_id")
	public Long getNetsuiteSalesOrderId() {
		return this.netsuiteSalesOrderId;
	}

	public void setNetsuiteSalesOrderId(Long netsuiteSalesOrderId) {
		this.netsuiteSalesOrderId = netsuiteSalesOrderId;
	}

	@Column(name = "netsuite_echosign_id")
	public Long getNetsuiteEchosignId() {
		return this.netsuiteEchosignId;
	}

	public void setNetsuiteEchosignId(Long netsuiteEchosignId) {
		this.netsuiteEchosignId = netsuiteEchosignId;
	}

	@Column(name = "one_time_total", nullable = false, precision = 10)
	public BigDecimal getOneTimeTotal() {
		return this.oneTimeTotal;
	}

	public void setOneTimeTotal(BigDecimal oneTimeTotal) {
		this.oneTimeTotal = oneTimeTotal;
	}

	@Column(name = "mrc_total", nullable = false, precision = 10)
	public BigDecimal getMrcTotal() {
		return this.mrcTotal;
	}

	public void setMrcTotal(BigDecimal mrcTotal) {
		this.mrcTotal = mrcTotal;
	}

	@Column(name = "one_time_tax_total", nullable = false, precision = 10)
	public BigDecimal getOneTimeTaxTotal() {
		return this.oneTimeTaxTotal;
	}

	public void setOneTimeTaxTotal(BigDecimal oneTimeTaxTotal) {
		this.oneTimeTaxTotal = oneTimeTaxTotal;
	}

	@Column(name = "mrc_tax_total", nullable = false, precision = 10)
	public BigDecimal getMrcTaxTotal() {
		return this.mrcTaxTotal;
	}

	public void setMrcTaxTotal(BigDecimal mrcTaxTotal) {
		this.mrcTaxTotal = mrcTaxTotal;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "orderGroup")
	public Set<OrderShipping> getOrderShippings() {
		return this.orderShippings;
	}

	public void setOrderShippings(Set<OrderShipping> orderShippings) {
		this.orderShippings = orderShippings;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "orderGroup")
	public Set<OrderTransactionItem> getOrderTransactionItems() {
		return this.orderTransactionItems;
	}

	public void setOrderTransactionItems(
			Set<OrderTransactionItem> orderTransactionItems) {
		this.orderTransactionItems = orderTransactionItems;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "orderGroup")
	public Set<OrderTransaction> getOrderTransactions() {
		return this.orderTransactions;
	}

	public void setOrderTransactions(Set<OrderTransaction> orderTransactions) {
		this.orderTransactions = orderTransactions;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "orderGroup")
	public Set<OrderBundle> getOrderBundles() {
		return this.orderBundles;
	}

	public void setOrderBundles(Set<OrderBundle> orderBundles) {
		this.orderBundles = orderBundles;
	}

}
