package com.fonality.bu.entity;

// Generated Mar 21, 2013 12:26:07 PM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * OrderTransactionItem generated by hbm2java
 */
@Entity
@Table(name = "order_transaction_item", catalog = "fcs")
public class OrderTransactionItem implements java.io.Serializable {

	private Integer orderTransactionItemId;
	private OrderTransaction orderTransaction;
	private OrderGroup orderGroup;
	private Bundle bundle;
	private OrderTransactionItem orderTransactionItem;
	private long netsuiteItemId;
	private int quantity;
	private BigDecimal listPrice;
	private String description;
	private int monthlyUsage;
	private BigDecimal amount;
	private Set<OrderTransactionItem> orderTransactionItems = new HashSet<OrderTransactionItem>(
			0);

	public OrderTransactionItem() {
	}

	public OrderTransactionItem(OrderTransaction orderTransaction,
			OrderGroup orderGroup, Bundle bundle, long netsuiteItemId,
			int quantity, BigDecimal listPrice, String description,
			int monthlyUsage, BigDecimal amount) {
		this.orderTransaction = orderTransaction;
		this.orderGroup = orderGroup;
		this.bundle = bundle;
		this.netsuiteItemId = netsuiteItemId;
		this.quantity = quantity;
		this.listPrice = listPrice;
		this.description = description;
		this.monthlyUsage = monthlyUsage;
		this.amount = amount;
	}

	public OrderTransactionItem(OrderTransaction orderTransaction,
			OrderGroup orderGroup, Bundle bundle,
			OrderTransactionItem orderTransactionItem, long netsuiteItemId,
			int quantity, BigDecimal listPrice, String description,
			int monthlyUsage, BigDecimal amount,
			Set<OrderTransactionItem> orderTransactionItems) {
		this.orderTransaction = orderTransaction;
		this.orderGroup = orderGroup;
		this.bundle = bundle;
		this.orderTransactionItem = orderTransactionItem;
		this.netsuiteItemId = netsuiteItemId;
		this.quantity = quantity;
		this.listPrice = listPrice;
		this.description = description;
		this.monthlyUsage = monthlyUsage;
		this.amount = amount;
		this.orderTransactionItems = orderTransactionItems;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "order_transaction_item_id", unique = true, nullable = false)
	public Integer getOrderTransactionItemId() {
		return this.orderTransactionItemId;
	}

	public void setOrderTransactionItemId(Integer orderTransactionItemId) {
		this.orderTransactionItemId = orderTransactionItemId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "order_transaction_id", nullable = false)
	public OrderTransaction getOrderTransaction() {
		return this.orderTransaction;
	}

	public void setOrderTransaction(OrderTransaction orderTransaction) {
		this.orderTransaction = orderTransaction;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "order_group_id", nullable = false)
	public OrderGroup getOrderGroup() {
		return this.orderGroup;
	}

	public void setOrderGroup(OrderGroup orderGroup) {
		this.orderGroup = orderGroup;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "bundle_id", nullable = false)
	public Bundle getBundle() {
		return this.bundle;
	}

	public void setBundle(Bundle bundle) {
		this.bundle = bundle;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "parent_trans_item_id")
	public OrderTransactionItem getOrderTransactionItem() {
		return this.orderTransactionItem;
	}

	public void setOrderTransactionItem(
			OrderTransactionItem orderTransactionItem) {
		this.orderTransactionItem = orderTransactionItem;
	}

	@Column(name = "netsuite_item_id", nullable = false)
	public long getNetsuiteItemId() {
		return this.netsuiteItemId;
	}

	public void setNetsuiteItemId(long netsuiteItemId) {
		this.netsuiteItemId = netsuiteItemId;
	}

	@Column(name = "quantity", nullable = false)
	public int getQuantity() {
		return this.quantity;
	}

	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}

	@Column(name = "list_price", nullable = false, precision = 10)
	public BigDecimal getListPrice() {
		return this.listPrice;
	}

	public void setListPrice(BigDecimal listPrice) {
		this.listPrice = listPrice;
	}

	@Column(name = "description", nullable = false, length = 16777215)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "monthly_usage", nullable = false)
	public int getMonthlyUsage() {
		return this.monthlyUsage;
	}

	public void setMonthlyUsage(int monthlyUsage) {
		this.monthlyUsage = monthlyUsage;
	}

	@Column(name = "amount", nullable = false, precision = 10)
	public BigDecimal getAmount() {
		return this.amount;
	}

	public void setAmount(BigDecimal amount) {
		this.amount = amount;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "orderTransactionItem")
	public Set<OrderTransactionItem> getOrderTransactionItems() {
		return this.orderTransactionItems;
	}

	public void setOrderTransactionItems(
			Set<OrderTransactionItem> orderTransactionItems) {
		this.orderTransactionItems = orderTransactionItems;
	}

}
