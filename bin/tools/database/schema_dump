#!/usr/bin/perl

###
#
# schema_dump [options]
#
# Description:
#       Dumps all FCS schema and reference table data using
#       reference_data_dump.conf
#
# Author:
#       Lucas Petherbridge <lpetherbridge@fonality.com>
#
###

use strict;
use warnings;

use Fap;
use Fap::Model::ResConf;
use File::Slurp;
use Getopt::Std;
use Carp;

# Globals
our $VERSION = '1.0';
$Getopt::Std::STANDARD_HELP_VERSION = 1;
my $SPACE = q{ };

# Get options
my %OPTS;
getopts('u:p:h:n:dl:', \%OPTS);
    
# Define default vars
chomp (my $CWD = `echo \$PWD`);
$OPTS{'l'} ||= $CWD;
$OPTS{'n'} ||= 'fcs';
$OPTS{'h'} ||= 'web-dev2.fonality.com';
$OPTS{'u'} ||= 'fonality';
$OPTS{'p'} ||= 'iNOcallU';

# Define binaries/commands
my $mysqldump = '/usr/bin/mysqldump';
my $dump_cmd = "$mysqldump -u$OPTS{'u'} -p$OPTS{'p'} -h$OPTS{'h'} $OPTS{'n'}";

# Define files
my $schema_file = Fap->path_to('res/data/mysql/fcs_schema.sql');
my $ref_db_conf = Fap::Model::ResConf->load("tools/reference_data_dump");
my $ref_data_file = Fap->path_to('res/data/mysql/fcs_reference_data.sql');

main();

sub main 
{
    ###
    # Main block
    ###

    if ($OPTS{'d'}) {
        # Dump All data
        my $all_dump_opts = '--single-transaction --compact --routines';
        my $all_dump = `$dump_cmd $all_dump_opts`;
        if ($all_dump) {
            File::Slurp::write_file("$OPTS{'l'}/$OPTS{'n'}_database.sql", { binmode => ':utf8' }, $all_dump);
            print STDERR "Dumped all data to \'$OPTS{'l'}\'.\n";
        }
        else {
            croak "Error while dumping all data. \$all_dump empty or undefined.\n";
        }
    }
    else {
        # Dump Schema
        my $schema_opts = '--single-transaction --no-data --routines';
        my $schema_dump_cmd = "$mysqldump $schema_opts -u$OPTS{'u'} -p$OPTS{'p'} -h$OPTS{'h'} $OPTS{'n'}";
        
        my $schema_dump = `$dump_cmd $schema_opts`;
        if ($schema_dump) {
            File::Slurp::write_file($schema_file, { binmode => ':utf8' }, $schema_dump);
            print STDERR "Dumped schema to '$schema_file'.\n";
        }
        else {
            croak "Error while dumping schema. \$schema_dump empty or undefined.\n";
        }

        # Dump reference data
        my $data_opts = '--single-transaction --compact --skip-triggers --no-create-info';

        # Get the list of all reference tables and add it to our dump command
        foreach my $table_name (sort keys %{$ref_db_conf->{tables}}) {
            my @lines;
            my $accessor = $ref_db_conf->{tables}->{$table_name};

            $dump_cmd .= $SPACE . $table_name;
        }
     
        my $data_dump .= `$dump_cmd $data_opts`;
        if ($data_dump) {
            $data_dump = "SET FOREIGN_KEY_CHECKS = 0;\n" . $data_dump;
            $data_dump .= "SET FOREIGN_KEY_CHECKS = 1;\n";
            File::Slurp::write_file($ref_data_file, { binmode => ':utf8' }, $data_dump);
            print STDERR "Dumped reference data to '$ref_data_file'.\n";
        }
        else {
            croak "Error while dumping reference data. \$data_dump empty or undefined.\n";
        }
    }

    return 1;
}

sub HELP_MESSAGE {

    print <<"HELP"
Usage: $0 [-OPTIONS [-MORE_OPTIONS]] [--] [PROGRAM_ARG1 ...]

The following single-character options are accepted:

        -d      Dump all data
        -l      Location to dump files to
        -u      Database username
        -p      Database password
        -h      Database hostname
        -n      Database name

Options may be merged together.  -- stops processing of options.
Space is not required between options and their arguments.
HELP
;
    return 1;
}
